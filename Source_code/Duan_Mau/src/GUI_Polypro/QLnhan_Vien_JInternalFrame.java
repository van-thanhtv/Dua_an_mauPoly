/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Polypro;

import Interface.nhanVienInterface;
import dao.nhanVienDao;
import helper.dialogHelper;
import helper.hashPassHelper;
import helper.mailHelper;
import helper.shareHelper;
import static helper.shareHelper.USER;
import helper.utilityHelper;
import static java.awt.Color.pink;
import static java.awt.Color.white;
import java.util.ArrayList;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.nhanVien;

/**
 *
 * @author Tran Van Thanh
 */
public class QLnhan_Vien_JInternalFrame extends javax.swing.JInternalFrame {

    private int viTri = 0;
    private nhanVienInterface NVDao;

    /**
     * Creates new form QLnhan_Vien_JInternalFrame
     */
    public QLnhan_Vien_JInternalFrame() {
        initComponents();
        this.NVDao = new nhanVienDao();
        setFrameIcon(shareHelper.APP_ICON1);//Set icon cho JInternalFrame
        this.tabs.setSelectedIndex(1);//Mở From hiện tabs thứ 2
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GroupVaiTro = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pnlEdit = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtXacNhanMK = new javax.swing.JPasswordField();
        txtMatKhau = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        rdoTruongPhong = new javax.swing.JRadioButton();
        rdoNhanVien = new javax.swing.JRadioButton();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        pnlList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGridView = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Quản Lý Nhân Viên");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ NHÂN VIÊN");

        jLabel2.setText("Mã nhân viên");

        txtMaNV.setName("Mã nhân viên"); // NOI18N

        jLabel3.setText("Mật khẩu");

        jLabel4.setText("Xác nhận mật khẩu");

        txtHoTen.setName("Họ và tên"); // NOI18N

        jLabel5.setText("Họ và tên");

        txtXacNhanMK.setName("Xác nhận mật khẩu"); // NOI18N

        txtMatKhau.setName("Mật khẩu"); // NOI18N

        jLabel6.setText("Vai trò");

        GroupVaiTro.add(rdoTruongPhong);
        rdoTruongPhong.setSelected(true);
        rdoTruongPhong.setText("Trưởng phòng ");

        GroupVaiTro.add(rdoNhanVien);
        rdoNhanVien.setText("Nhân viên");

        btnInsert.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add to basket.png"))); // NOI18N
        btnInsert.setText("Thêm");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Notes.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Unordered list.png"))); // NOI18N
        btnClear.setText("Mới");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnFirst.setBackground(new java.awt.Color(51, 51, 255));
        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/dau.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setBackground(new java.awt.Color(51, 51, 255));
        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/lui.png"))); // NOI18N
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(255, 153, 0));
        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/tien.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setBackground(new java.awt.Color(255, 153, 0));
        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/cuoi.png"))); // NOI18N
        btnLast.setToolTipText("");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        jLabel8.setText("Emali");

        txtEmail.setName("Họ và tên"); // NOI18N

        javax.swing.GroupLayout pnlEditLayout = new javax.swing.GroupLayout(pnlEdit);
        pnlEdit.setLayout(pnlEditLayout);
        pnlEditLayout.setHorizontalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addComponent(btnInsert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addGap(29, 29, 29)
                .addComponent(btnFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast)
                .addGap(0, 12, Short.MAX_VALUE))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaNV)
                    .addComponent(txtXacNhanMK)
                    .addComponent(txtMatKhau)
                    .addComponent(txtHoTen)
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addGroup(pnlEditLayout.createSequentialGroup()
                                .addComponent(rdoTruongPhong)
                                .addGap(18, 18, 18)
                                .addComponent(rdoNhanVien))
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtEmail))
                .addContainerGap())
        );
        pnlEditLayout.setVerticalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtXacNhanMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoTruongPhong)
                    .addComponent(rdoNhanVien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(btnFirst)
                    .addComponent(btnPrev)
                    .addComponent(btnNext)
                    .addComponent(btnLast))
                .addContainerGap())
        );

        tabs.addTab("CẬP NHẬT", new javax.swing.ImageIcon(getClass().getResource("/icon/but.png")), pnlEdit, "Cập nhật"); // NOI18N

        pnlList.setLayout(new java.awt.BorderLayout());

        tblGridView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MÃ NV", "MẬT KHẨU", "HỌ VÀ TÊN", "EMAIL", "VAI TRÒ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGridView.setEditingRow(1);
        tblGridView.setRowHeight(25);
        tblGridView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGridViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblGridView);

        pnlList.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        tabs.addTab("DANH SÁCH", new javax.swing.ImageIcon(getClass().getResource("/icon/List.png")), pnlList, "Danh sách"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tabs)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        if (utilityHelper.checkNullText(txtMaNV)
                && utilityHelper.checkNullPass(txtMatKhau)
                && utilityHelper.checkNullPass(txtXacNhanMK)
                && utilityHelper.checkNullText(txtHoTen)) {
            if (utilityHelper.checkMaNV(txtMaNV)
                    && utilityHelper.checkPass(txtMatKhau)
                    && utilityHelper.checkName(txtHoTen)) {
                if (checkTrungMa(txtMaNV)) {                    
                    dialogHelper.alert(this,"Xác nhận Email");
                    int macode=mailHelper.sendcode(txtEmail);
                    System.out.println(""+macode);//Lúc nào xuất ra file exe thì cmt dòng này
                    dialogHelper.alert(this,"Code has been send to the email");
                    String ma =dialogHelper.prompt(this,"Nhập vào mã Code (6 số)");
                    if (macode==Integer.parseInt(ma)) {
                        insert();                        
                    }else{
                        dialogHelper.alert(this, ma +" không khớp");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (utilityHelper.checkNullPass(txtMatKhau)
                && utilityHelper.checkNullPass(txtXacNhanMK)
                && utilityHelper.checkNullText(txtHoTen)) {
            if (utilityHelper.checkPass(txtMatKhau)
                    && utilityHelper.checkName(txtHoTen)) {
                update();
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (shareHelper.USER.isVaiTro()) {
            if (checkChinhMinh(txtMaNV)) {
                delete();
            }
        } else {
            dialogHelper.alert(this, "Chỉ trưởng phòng mới được phép xóa");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        this.viTri = 0;
        this.edit();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        this.viTri--;
        this.edit();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        this.viTri++;
        this.edit();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        this.viTri = tblGridView.getRowCount() - 1;
        this.edit();
    }//GEN-LAST:event_btnLastActionPerformed

    private void tblGridViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGridViewMouseClicked
        // TODO add your handling code here:
        //        tblGridView.rowAtPoint(evt.getPoint());//lấy vị trí dòng được chọn
        if (evt.getClickCount() == 2) {//Thực hiện kich chuột 2 lần
            this.viTri = tblGridView.getSelectedRow();
            if (this.viTri >= 0) {
                this.edit();
                tabs.setSelectedIndex(0); //chuyển sang tabs thứ nhất
            }
        }
    }//GEN-LAST:event_tblGridViewMouseClicked
    //sự kiện khi mở JInternalFrame
    //đổ dữ liệu từ CSDL vào bảng
    //để frame sang chế độ insertable
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        this.load();
    }//GEN-LAST:event_formInternalFrameOpened
    private void edit() {
//        setTrang();
        try {
            String manv = (String) tblGridView.getValueAt(this.viTri, 0);  //lấy maNV từ bảng theo vị trí hàng được chọn
            nhanVien model = this.NVDao.findById(manv); //dùng maNV tìm ra đối tượng nhanVien
            if (model != null) {
                this.setModel(model);   //điền thông tin đt nhanVien lên form
                this.setStatus(false);  //chuyển sang editable
            }
        } catch (Exception e) {
            dialogHelper.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    //return nhanVien
    //lấy thông tin trên form cho vào đt nhanVien
    private nhanVien getModel() {
        nhanVien model = new nhanVien();
        model.setMaNV(txtMaNV.getText());
        model.setHoTen(txtHoTen.getText());
        model.setMatKhau(txtMatKhau.getText());
        model.setGmail(txtEmail.getText());
        model.setVaiTro(rdoTruongPhong.isSelected());
        return model;
    }

    //param nhanVien
    //đưa thông tin nhanVien lên form theo model
    private void setModel(nhanVien model) {
        try {
            txtMaNV.setText(model.getMaNV());
            txtHoTen.setText(model.getHoTen());
            if (model.isVaiTro()) {
                txtMatKhau.setText("");
                txtXacNhanMK.setText("");
            } else {
                txtMatKhau.setText(hashPassHelper.decrypt(model.getMatKhau()));
                txtXacNhanMK.setText(hashPassHelper.decrypt(model.getMatKhau()));
            }
            txtEmail.setText(model.getGmail());
            rdoTruongPhong.setSelected(model.isVaiTro());
            rdoNhanVien.setSelected(!model.isVaiTro());
        } catch (Exception e) {
            e.printStackTrace();
            dialogHelper.alert(this, "Lỗi hệ thống");
        }
    }

    /*
    param: boolean
    insertable: (true)                                 THÊM NHÂN VIÊN MỚI
        enable: txtMaNV, btnInsert          cho phép
        disable: btnUpdate, btnDelete, 4 nút điều hướng      Sẽ bị vô hiệu hóa
    editable: (false) ngược lại                         XEM VÀ SỬA   
    btnClear lúc nào cũng enable
    4 nút điều hướng: disble 2 nút tương ứng khi ở đầu và cuối danh sách
     */
    private void setStatus(boolean insertable) {
        txtMaNV.setEditable(insertable);    //enable txtMaNV
        txtMatKhau.setEditable(insertable);    //enable txtMaNV
        txtXacNhanMK.setEditable(insertable);    //enable txtMaNV
        btnInsert.setEnabled(insertable);   //enable btnInsert
        btnUpdate.setEnabled(!insertable);  //disable btnUpdate
        btnDelete.setEnabled(!insertable);  //disable brnDelete
        boolean first = this.viTri > 0;
        boolean last = this.viTri < tblGridView.getRowCount() - 1;
        btnFirst.setEnabled(!insertable && first);//enable 4 nút này khi ở editable
        btnPrev.setEnabled(!insertable && first); //disable khi First, Prev khi ở bản ghi đầu (index = 0)
        btnNext.setEnabled(!insertable && last);  //disable khi Next, Last khi ở bản ghi cuối
        btnLast.setEnabled(!insertable && last);  //index = tblGridView.getRowCount() - 1
    }

    //lấy list nhanVien từ CSDL điền vào bảng
    //LƯU Ý: CHỈ TRƯỞNG PHÒNG MỚI XEM ĐƯỢC MẬT KHẨU CỦA NHÂN VIÊN
    private void load() {
        /*
        2 cách kết nối model với bảng:
        cách 1: DefaultTableModel model = (DefaultTableModel) tblGridView.getModel();
        cách 2: tblGridView.setModel(model);
         */
        DefaultTableModel model = (DefaultTableModel) tblGridView.getModel();
        model.setRowCount(0);   //đưa số dòng về 0 (xóa bảng)
        try {
            ArrayList<nhanVien> list = this.NVDao.select();   //lấy tất cả nhân viên trong CSDL đưa vào list
            /*
            3 cách đưa dữ liệu vào bảng:
            cách 1: dùng mảng 2 chiều
                String[] header ={"ten 1", "ten 2",...};
                Object[][] data ={{x1, x2,...}, {c1, c2,...},...};
                DefaultTableModel model = new DefaultTableModel(header, data);
                tblGridView.setModel(model);
            cách 2: dùng mảng 1 chiều (như trong bài này)
                tblGridView.setModel(model);
                for(...){
                    Object[] row ={x1, x2,...}
                    model.addRow(row);
                }
            cách 3: dùng vector   (như cách 2 nhưng vector thay cho mảng 1 chiều
                tblGridView.setModel(model);
                for(...){
                    Vector row=new Vector();
                    row.add(x1);
                    row.add(x2);
                    ...
                    model.addRow(row);
                }
             */
            for (nhanVien nv : list) {
                Object[] row = {
                    nv.getMaNV(),
                    this.matKhauToSao(),
                    nv.getHoTen(),
                    nv.getGmail(),
                    nv.isVaiTro() ? "Trưởng phòng" : "Nhân viên"
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
            dialogHelper.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    //chỉ trưởng phòng mới đc xem mật khẩu của nhân viên
    private String matKhauToSao() {
        String sao = "";
        for (int i = 0; i < 5; i++) {
            sao += "*";
        }
        return sao;
    }

    //Kiểm tra tài khoản đang dùng 
    private boolean checkChinhMinh(JTextField txt) {
        nhanVien nv = this.NVDao.findById(txt.getText());
        if (nv.getMaNV().equals(USER.getMaNV())) {
            dialogHelper.alert(this, "Bạn không được xóa chính mình.");
            return false;
        } else {
            return true;
        }
    }

    private boolean checkTrungMa(JTextField txt) {
        txt.setBackground(white);
        if (this.NVDao.findById(txt.getText()) == null) {
            return true;
        } else {
            txt.setBackground(pink);
            dialogHelper.alert(this, txt.getText() + " đã bị tồn tại.");
            return false;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GroupVaiTro;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlEdit;
    private javax.swing.JPanel pnlList;
    private javax.swing.JRadioButton rdoNhanVien;
    private javax.swing.JRadioButton rdoTruongPhong;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblGridView;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JPasswordField txtXacNhanMK;
    // End of variables declaration//GEN-END:variables
    //lấy thông tin trên form để
    //thêm (đăng kí) nhân viên - trưởng phòng vào CSDL
    private void insert() {
        //getModel() viết ở dưới, lấy thông tin trên form điền vào đt model
        nhanVien model = getModel();
        String confirm = new String(txtXacNhanMK.getPassword()); //cách chuyển char[] sang String
        //so sánh mật khẩu và MK xác nhận
        txtXacNhanMK.setBackground(white);
        if (confirm.equals(model.getMatKhau())) {
            try {
                this.NVDao.insert(model);
                this.load();//Cập nhập lại trên from
                this.clear();//Xóa trắng from
                dialogHelper.alert(this, "Đăng kí thành công!");
            } catch (Exception e) {
                dialogHelper.alert(this, "Đăng kí thất bại!");
            }
        } else {
            txtXacNhanMK.setBackground(pink);
            dialogHelper.alert(this, "Xác nhận mật khẩu không đúng!");
        }
    }

    private void clear() {
        this.txtEmail.setText("");
        this.txtHoTen.setText("");
        this.txtMaNV.setText("");
        this.txtMatKhau.setText("");
        this.txtXacNhanMK.setText("");
        this.rdoTruongPhong.setSelected(true);
        this.setStatus(true);//THÊM NHÂN VIÊN MỚI Và vô hiệu hóa 4 nút còn lại
    }
    //lấy thông tin trên form để
    //cập nhật nhanVien theo maNV
    private void update() {
        nhanVien nv = this.getModel();
        this.txtXacNhanMK.setBackground(white);
        if (nv.getMatKhau().equals(this.txtXacNhanMK.getText())) {
            try {
                 this.NVDao.update(nv);//Cập nhập theo mã NV
                 this.load();//Load lại from
                 this.clear();//Xóa trắng from
                 dialogHelper.alert(this, "Cập nhập thành công");
            } catch (Exception e) {
                e.printStackTrace();
                dialogHelper.alert(this,"Cập nhập thất bại !");
            }
        }else{
            this.txtXacNhanMK.setBackground(pink);
            dialogHelper.alert(this, "Xác nhận mật khẩu không đúng !");
        }
    }

    private void delete() {
        if (dialogHelper.confirm(this,"Bạn thực sự muốn xóa nhân viên này ??")) {
            try {
                this.NVDao.delete(this.txtMaNV.getText());
                this.load();
                this.clear();
                dialogHelper.alert(this, "Xóa thành công nhân viên " + this.txtMaNV.getText());
            } catch (Exception e) {
                e.printStackTrace();
                dialogHelper.alert(this, "Xóa thất bại !");
            }            
        }
    }
}
