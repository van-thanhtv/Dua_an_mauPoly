/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Polypro;

import Interface.khoaHocInterface;
import Interface.thongKeInterface;
import dao.khoaHocDao;
import dao.thongKeDao;
import helper.ExportFileHelper;
import helper.dialogHelper;
import helper.shareHelper;
import java.awt.CardLayout;
import java.io.File;
import java.nio.file.Paths;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.khoaHoc;

/**
 *
 * @author Tran Van Thanh
 */
public class QLthong_ke_JInternalFrame extends javax.swing.JInternalFrame {

    private thongKeInterface TKDao;
    private khoaHocInterface KHDao;

    /**
     * Creates new form QLthong_ke_JInternalFrame
     */
    public QLthong_ke_JInternalFrame(int index) {
        initComponents();
        tabs.setSelectedIndex(index);
        this.init();
        this.TKDao = new thongKeDao();
        this.KHDao = new khoaHocDao();
    }

    private void init() {
        setFrameIcon(shareHelper.APP_ICON1);
        CardLayout card = (CardLayout) pnlDoanhThu.getLayout();
        if (shareHelper.USER.isVaiTro()) {
            card.show(pnlDoanhThu, "card1");
        } else {
            card.show(pnlDoanhThu, "card2");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pnlNguoiHoc = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        pnlBangDiem = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBangDiem = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cboKhoaHoc = new javax.swing.JComboBox<>();
        pnlKhoaHoc = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblKhoaHoc = new javax.swing.JTable();
        pnlDoanhThu = new javax.swing.JPanel();
        pnlTruongPhong = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDoanhThu = new javax.swing.JTable();
        pnlNhanVien = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btn_export = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Quản Lý Thống Kê");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TỔNG HỢP THỐNG KÊ");

        pnlNguoiHoc.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                pnlNguoiHocAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        pnlNguoiHoc.setLayout(new java.awt.BorderLayout());

        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NĂM", "SỐ NGƯỜI HỌC", "ĐẦU TIÊN", "SAU CÙNG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNguoiHoc.setRowHeight(25);
        jScrollPane1.setViewportView(tblNguoiHoc);

        pnlNguoiHoc.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        tabs.addTab("NGƯỜI HỌC", new javax.swing.ImageIcon(getClass().getResource("/icon/User group.png")), pnlNguoiHoc, "NGƯỜI HỌC"); // NOI18N

        pnlBangDiem.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                pnlBangDiemAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        pnlBangDiem.setLayout(new java.awt.BorderLayout());

        tblBangDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MÃ NH", "HỌ VÀ TÊN", "ĐIỂM", "XẾP LOẠI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBangDiem.setRowHeight(25);
        jScrollPane2.setViewportView(tblBangDiem);

        pnlBangDiem.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Card file.png"))); // NOI18N
        jLabel2.setText("KHÓA HỌC: ");
        jPanel2.add(jLabel2, java.awt.BorderLayout.LINE_START);

        cboKhoaHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoaHocActionPerformed(evt);
            }
        });
        jPanel2.add(cboKhoaHoc, java.awt.BorderLayout.CENTER);

        pnlBangDiem.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        tabs.addTab("BẢNG ĐIỂM", new javax.swing.ImageIcon(getClass().getResource("/icon/Numbered list.png")), pnlBangDiem, "BẢNG ĐIỂM"); // NOI18N

        pnlKhoaHoc.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                pnlKhoaHocAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        pnlKhoaHoc.setLayout(new java.awt.BorderLayout());

        tblKhoaHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CHUYÊN ĐỀ", "TỔNG SỐ HV", "CAO NHẤT", "THẤP NHẤT", "ĐIỂM TRUNG BÌNH"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKhoaHoc.setRowHeight(25);
        jScrollPane3.setViewportView(tblKhoaHoc);

        pnlKhoaHoc.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        tabs.addTab("TỔNG HỢP ĐIỂM", new javax.swing.ImageIcon(getClass().getResource("/icon/Clien list.png")), pnlKhoaHoc, "TỔNG HỢP ĐIỂM"); // NOI18N

        pnlDoanhThu.setLayout(new java.awt.CardLayout());

        pnlTruongPhong.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Date.png"))); // NOI18N
        jLabel3.setText("NĂM: ");
        jPanel1.add(jLabel3, java.awt.BorderLayout.LINE_START);

        cboNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamActionPerformed(evt);
            }
        });
        jPanel1.add(cboNam, java.awt.BorderLayout.CENTER);

        pnlTruongPhong.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        tblDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "CHUYÊN ĐỀ", "SỐ KHÓA", "SỐ HV", "DOANH THU", "HP CAO NHẤT", "HP THẤP NHẤT", "HP TRUNG BÌNH"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoanhThu.setRowHeight(25);
        tblDoanhThu.setRowMargin(0);
        tblDoanhThu.setShowVerticalLines(false);
        jScrollPane4.setViewportView(tblDoanhThu);

        pnlTruongPhong.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        pnlDoanhThu.add(pnlTruongPhong, "card1");

        pnlNhanVien.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                pnlNhanVienAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        pnlNhanVien.setLayout(new java.awt.BorderLayout());

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Secure.png"))); // NOI18N
        jLabel4.setToolTipText("cẩn thận bị trừ lương");
        pnlNhanVien.add(jLabel4, java.awt.BorderLayout.PAGE_END);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("CHỈ TRƯỞNG PHÒNG MỚI ĐƯỢC XEM DOANH THU");
        jLabel5.setToolTipText("cẩn thận bị trừ lương");
        pnlNhanVien.add(jLabel5, java.awt.BorderLayout.CENTER);

        pnlDoanhThu.add(pnlNhanVien, "card2");

        tabs.addTab("DOANH THU", new javax.swing.ImageIcon(getClass().getResource("/icon/Coins.png")), pnlDoanhThu, "DOANH THU"); // NOI18N

        btn_export.setBackground(new java.awt.Color(24, 98, 151));
        btn_export.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_export.setForeground(new java.awt.Color(255, 255, 255));
        btn_export.setText("Xuất EXCEL");
        btn_export.setBorder(null);
        btn_export.setBorderPainted(false);
        btn_export.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_export, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_export, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboKhoaHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoaHocActionPerformed
        // TODO add your handling code here:
        fillTableBangDiem();                     //ActionPerformed
    }//GEN-LAST:event_cboKhoaHocActionPerformed

    private void cboNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamActionPerformed
        // TODO add your handling code here:
        fillTableDoanhThu();                   //ActionPerformed
    }//GEN-LAST:event_cboNamActionPerformed
    /*
    khi mở JInternalFrame:
    điền dữ liệu vào cboKhoaHoc và cboNam
    điền dữ liệu vào các bảng
     */
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        fillComboBoxkhoaHoc();
        fillTableBangDiem();
        fillTableNguoiHoc();
        fillTablekhoaHoc();
        fillComboBoxNam();
        fillTableDoanhThu();
    }//GEN-LAST:event_formInternalFrameOpened

    private void btn_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exportActionPerformed
        try {
            JFileChooser chonChoLuu = new JFileChooser();
            //chonChoLuu.setCurrentDirectory(new File(System.getProperty("user.dir")));
            chonChoLuu.setSelectedFile(new File("unname.xlsx"));
            int reponse = chonChoLuu.showSaveDialog(null);
            if (reponse == JFileChooser.APPROVE_OPTION) {
                String savePath = chonChoLuu.getSelectedFile().getAbsolutePath();
                if (chonChoLuu.getSelectedFile().getName().length() > 5) {
                    if (!savePath.substring(savePath.length() - 5).equals(".xlsx")) {
                        savePath = savePath + ".xlsx";
                    }
                } else {
                    savePath = savePath + ".xlsx";
                }
                if (new File(savePath).exists()) {
                    if (dialogHelper.confirm(this, "Đã tồn tại file này, bạn có muốn ghi đè?")) {
                        switch (this.tabs.getSelectedIndex()) {
                            case 0:
                                ExportFileHelper.writeToExcell(this.tblNguoiHoc, Paths.get(savePath));
                                dialogHelper.alert(this, "Xuất File thành công !");
                                break;
                            case 1:
                                ExportFileHelper.writeToExcell(this.tblBangDiem, Paths.get(savePath));
                                dialogHelper.alert(this, "Xuất File thành công !");
                                break;
                            case 2:
                                ExportFileHelper.writeToExcell(this.tblKhoaHoc, Paths.get(savePath));
                                dialogHelper.alert(this, "Xuất File thành công !");
                                break;
                            case 3:
                                ExportFileHelper.writeToExcell(this.tblDoanhThu, Paths.get(savePath));
                                dialogHelper.alert(this, "Xuất File thành công !");
                                break;
                        }
                    }
                } else {
                    switch (this.tabs.getSelectedIndex()) {
                        case 0:
                            ExportFileHelper.writeToExcell(this.tblNguoiHoc, Paths.get(savePath));
                            dialogHelper.alert(this, "Xuất File thành công !");
                            break;
                        case 1:
                            ExportFileHelper.writeToExcell(this.tblBangDiem, Paths.get(savePath));
                            dialogHelper.alert(this, "Xuất File thành công !");
                            break;
                        case 2:
                            ExportFileHelper.writeToExcell(this.tblKhoaHoc, Paths.get(savePath));
                            dialogHelper.alert(this, "Xuất File thành công !");
                            break;
                        case 3:
                            ExportFileHelper.writeToExcell(this.tblDoanhThu, Paths.get(savePath));
                            dialogHelper.alert(this, "Xuất File thành công !");
                            break;
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Xuất file thất bại!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_exportActionPerformed

    private void pnlNhanVienAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_pnlNhanVienAncestorAdded
        // TODO add your handling code here:
        this.btn_export.setVisible(false);
    }//GEN-LAST:event_pnlNhanVienAncestorAdded

    private void pnlNguoiHocAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_pnlNguoiHocAncestorAdded
        // TODO add your handling code here:
        this.btn_export.setVisible(true);
    }//GEN-LAST:event_pnlNguoiHocAncestorAdded

    private void pnlBangDiemAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_pnlBangDiemAncestorAdded
        // TODO add your handling code here:
        this.btn_export.setVisible(true);
    }//GEN-LAST:event_pnlBangDiemAncestorAdded

    private void pnlKhoaHocAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_pnlKhoaHocAncestorAdded
        // TODO add your handling code here:
        this.btn_export.setVisible(true);
    }//GEN-LAST:event_pnlKhoaHocAncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_export;
    private javax.swing.JComboBox<String> cboKhoaHoc;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel pnlBangDiem;
    private javax.swing.JPanel pnlDoanhThu;
    private javax.swing.JPanel pnlKhoaHoc;
    private javax.swing.JPanel pnlNguoiHoc;
    private javax.swing.JPanel pnlNhanVien;
    private javax.swing.JPanel pnlTruongPhong;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblBangDiem;
    private javax.swing.JTable tblDoanhThu;
    private javax.swing.JTable tblKhoaHoc;
    private javax.swing.JTable tblNguoiHoc;
    // End of variables declaration//GEN-END:variables
    //xóa bảng điểm, điền dữ liệu vào bảng điểm theo MaKH
    private void fillTableBangDiem() {
        khoaHoc kh = (khoaHoc) this.cboKhoaHoc.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) tblBangDiem.getModel();
        model.setRowCount(0);
        ArrayList<Object[]> list = this.TKDao.getBangDiem(kh.getMaKH());
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    //xóa bảng doanh thu, điền dữ liệu vào bảng doanh thu theo năm tương ứng
    private void fillTableDoanhThu() {
        int nam = Integer.parseInt(cboNam.getSelectedItem().toString());
        DefaultTableModel model = (DefaultTableModel) tblDoanhThu.getModel();
        model.setRowCount(0);
        ArrayList<Object[]> list = this.TKDao.getDoanhThu(nam);//lấy doanh thu theo năm
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    //xóa cbo, lấy tất cả đt khoaHoc từ CSDL thêm mới vào cbo
    //chọn sẵn Item thứ nhất
    private void fillComboBoxkhoaHoc() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhoaHoc.getModel(); //kết nối cbo với model
        model.removeAllElements(); //xóa tất cả item
        ArrayList<khoaHoc> list = this.KHDao.select();
        for (khoaHoc kh : list) {
            model.addElement(kh);
        }
        cboKhoaHoc.setSelectedIndex(0);
    }

    //xóa bảng người học, đièm dữ liệu vào bảng người học
    private void fillTableNguoiHoc() {
        DefaultTableModel model = (DefaultTableModel) tblNguoiHoc.getModel();
        model.setRowCount(0);
        ArrayList<Object[]> list = this.TKDao.getNguoHoc();
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    //xóa bảng tổng hợp điểm, điền dữ liệu vào bảng tổng hợp điểm
    private void fillTablekhoaHoc() {
        DefaultTableModel model = (DefaultTableModel) tblKhoaHoc.getModel();
        model.setRowCount(0);
        ArrayList<Object[]> list = this.TKDao.getDiemTheoChuyenDe();
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    //lấy tất cả năm của khóa học (int) điền vào cbo (điền đt int), ko điền trùng
    //chọn sẵn Item thứ nhất
    private void fillComboBoxNam() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNam.getModel();
        model.removeAllElements();
        ArrayList<Integer> list = this.TKDao.getNamKhaiGiang();//Lấy list năm khai giảng
        for (Integer nam : list) {
            model.addElement(nam);
        }
        this.cboNam.setSelectedIndex(0);
    }
}
